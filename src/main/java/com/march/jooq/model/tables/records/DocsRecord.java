/*
 * This file is generated by jOOQ.
 */
package com.march.jooq.model.tables.records;


import com.march.jooq.model.tables.Docs;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocsRecord extends UpdatableRecordImpl<DocsRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1191372669;

    /**
     * Setter for <code>lexicon.docs.doc_id</code>.
     */
    public void setDocId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>lexicon.docs.doc_id</code>.
     */
    public Integer getDocId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>lexicon.docs.doc_name</code>.
     */
    public void setDocName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>lexicon.docs.doc_name</code>.
     */
    public String getDocName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>lexicon.docs.sightings</code>.
     */
    public void setSightings(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>lexicon.docs.sightings</code>.
     */
    public Integer getSightings() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Docs.DOCS.DOC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Docs.DOCS.DOC_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Docs.DOCS.SIGHTINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDocId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDocName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSightings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDocId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDocName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSightings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocsRecord value1(Integer value) {
        setDocId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocsRecord value2(String value) {
        setDocName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocsRecord value3(Integer value) {
        setSightings(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocsRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocsRecord
     */
    public DocsRecord() {
        super(Docs.DOCS);
    }

    /**
     * Create a detached, initialised DocsRecord
     */
    public DocsRecord(Integer docId, String docName, Integer sightings) {
        super(Docs.DOCS);

        set(0, docId);
        set(1, docName);
        set(2, sightings);
    }
}
