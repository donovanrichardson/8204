/*
 * This file is generated by jOOQ.
 */
package com.march.jooq.model.tables.records;


import com.march.jooq.model.tables.Words;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WordsRecord extends UpdatableRecordImpl<WordsRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = 274331156;

    /**
     * Setter for <code>lexicon.words.word</code>.
     */
    public void setWord(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>lexicon.words.word</code>.
     */
    public String getWord() {
        return (String) get(0);
    }

    /**
     * Setter for <code>lexicon.words.frequency</code>.
     */
    public void setFrequency(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lexicon.words.frequency</code>.
     */
    public Integer getFrequency() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Words.WORDS.WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Words.WORDS.FREQUENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getFrequency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFrequency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordsRecord value1(String value) {
        setWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordsRecord value2(Integer value) {
        setFrequency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordsRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WordsRecord
     */
    public WordsRecord() {
        super(Words.WORDS);
    }

    /**
     * Create a detached, initialised WordsRecord
     */
    public WordsRecord(String word, Integer frequency) {
        super(Words.WORDS);

        set(0, word);
        set(1, frequency);
    }
}
