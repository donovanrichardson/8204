/*
 * This file is generated by jOOQ.
 */
package com.march.jooq.model;


import com.march.jooq.model.tables.Docs;
import com.march.jooq.model.tables.Langs;
import com.march.jooq.model.tables.Textstring;
import com.march.jooq.model.tables.Translations;
import com.march.jooq.model.tables.Words;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lexicon extends SchemaImpl {

    private static final long serialVersionUID = -715060106;

    /**
     * The reference instance of <code>lexicon</code>
     */
    public static final Lexicon LEXICON = new Lexicon();

    /**
     * The table <code>lexicon.docs</code>.
     */
    public final Docs DOCS = com.march.jooq.model.tables.Docs.DOCS;

    /**
     * The table <code>lexicon.langs</code>.
     */
    public final Langs LANGS = com.march.jooq.model.tables.Langs.LANGS;

    /**
     * The table <code>lexicon.textstring</code>.
     */
    public final Textstring TEXTSTRING = com.march.jooq.model.tables.Textstring.TEXTSTRING;

    /**
     * The table <code>lexicon.translations</code>.
     */
    public final Translations TRANSLATIONS = com.march.jooq.model.tables.Translations.TRANSLATIONS;

    /**
     * The table <code>lexicon.words</code>.
     */
    public final Words WORDS = com.march.jooq.model.tables.Words.WORDS;

    /**
     * No further instances allowed
     */
    private Lexicon() {
        super("lexicon", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Docs.DOCS,
            Langs.LANGS,
            Textstring.TEXTSTRING,
            Translations.TRANSLATIONS,
            Words.WORDS);
    }
}
